{"version":3,"sources":["components/ImageResult/ImageResult.module.css","components/MainCover/MainCover.module.css","components/Nav/Nav.js","components/ImageResult/ImageResult.js","components/MainCover/MainCover.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavComonent","className","href","Component","ImageResult","props","src","alt","onClick","clickHandler","classes","border","img","onMouseOver","mouseOver","MainCover","useState","searchText","setSearchText","imageData","setImageData","dialogOpen","setDialogOpen","infoDialogOpen","setInfoDialogOpen","dialogImg","setDialogImg","name","setName","profileImage","setProfileImage","username","setUserName","location","setLocation","published","setPublished","likes","setLikes","downloads","setDownloads","React","useEffect","fetchImages","imagesFromURL","count","apiRoot","accessKey","axios","get","then","res","data","console","log","handleBackDrop","document","getElementsByClassName","map","image","key","id","urls","small","url","profile_image","clicked","user","created_at","style","backgroundImage","onSubmit","e","client_ID","preventDefault","params","query","per_page","headers","Authorization","response","results","catch","error","type","placeholder","aria-label","value","onChange","target","cursor","col34","Dialog","open","onBackdropClick","maxWidth","fullWidth","borderRadius","icon","faArrowDown","faPlus","faHeart","faMapPin","faInfo","faShare","format","faThumbsUp","App","Nav","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4970a4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ImageResult_img__oMifU\",\"border\":\"ImageResult_border__lxhjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col34\":\"MainCover_col34__30oz5\",\"cursor\":\"MainCover_cursor__ORNi2\",\"backgroundImg\":\"MainCover_backgroundImg__1HGD-\"};","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass NavComonent extends Component {\n    \n    \n    render(){\n        \n        return(\n            <div>\n                <nav className=\"navbar sticky-top navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href=\"#home\">Unsplash-ReactJS</a>\n                </nav>\n                {/* {imagesFromComponent} */}\n            </div>\n        );\n    }\n}\n\nexport default NavComonent;","import React from 'react';\nimport classes from  './ImageResult.module.css';\n\nconst ImageResult = (props) => {\n    // console.log(props)\n    return(\n        <div >\n            <img src={props.src} \n                alt={props.alt} \n                onClick={props.clickHandler} \n                className={`\"img-fluid ${classes.border} ${classes.img} \"`}\n                onMouseOver={props.mouseOver}\n             />\n        </div>\n    );\n}\n\nexport default ImageResult;","import React, {useState} from 'react';\nimport axios from 'axios';\nimport ImageResult from '../ImageResult/ImageResult';\nimport classes from './MainCover.module.css';\n// import InfiniteScroll from 'react-infinite-scroller';\nimport {Dialog} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faHeart, \n        faPlus, \n        faArrowDown, \n        faMapPin, \n        faShare, \n        faInfo,\n        faThumbsUp\n         } from '@fortawesome/free-solid-svg-icons';\nimport Moment from 'react-moment';\n\n\n\nconst MainCover = (props) => {\n    const [searchText, setSearchText] = useState('');\n    const [imageData, setImageData] = useState([]);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [infoDialogOpen, setInfoDialogOpen] = useState(false);\n    const [dialogImg, setDialogImg] = useState('');\n    const [name, setName] = useState('');\n    const [profileImage, setProfileImage] = useState('');\n    const [username, setUserName] = useState('');\n    const [location, setLocation] = useState('');\n    const [published, setPublished] = useState('');\n    const [likes, setLikes] = useState('');\n    const [downloads, setDownloads] = useState('');\n\n    \n\n    React.useEffect(() => {\n        fetchImages();\n      }, []);\n    \n      const fetchImages = (count = 10) => {\n        const apiRoot = \"https://api.unsplash.com\";\n        const accessKey =\n          \"a22f61e98da4efa25d8860e77a91a596867dd335ecdf7feb12e086943db9565a\";\n    \n        axios\n          .get(`${apiRoot}/photos/random?client_id=${accessKey}&count=${count}`)\n          .then(res => {\n            setImageData([...imageData, ...res.data]);\n    \n            console.log(imageData);\n          });\n      };\n\n    const handleSubmit = (e, count=15) =>{\n        \n\n\n        \n        const client_ID = \"de9303375d7a484e5fff76d8f86bd5057fecc7601fa9836ecd37fe28f6b5e3fc\";\n        console.log(searchText);\n        e.preventDefault();\n        axios.get('https://api.unsplash.com/search/photos', {\n            params: { \n                query: searchText,\n                per_page:count },\n            headers: {\n                Authorization: `Client-ID ${client_ID}`\n            }\n        }).then(response=> {\n            // console.log(response)\n            //   this.setState({imageData: response.data.results, totalCount: response.data.total})\n            setImageData(response.data.results);\n            console.log(response);  \n        }  \n            )\n        .catch(error=>error)\n\n    }\n    const handleChange = (e) => {\n        setSearchText(e.target.value);\n    }\n    const clicked = (url, name, profile_image, username, location, published, likes, downloads) => {\n        // console.log(\"clicked\")\n        setDialogOpen(true)\n        setDialogImg(url)\n        setName(name)\n        setProfileImage(profile_image)\n        setUserName(username)\n        setLocation(location)\n        setPublished(published)\n        setLikes(likes)\n        setDownloads(downloads)\n    }\n    const handleBackDrop = () => {\n        setDialogOpen(false)\n    }\n    const mouseOver = () => {\n        // console.log(\"mouse\")\n        document.getElementsByClassName('col34')\n\n    }\n    const getInfo = () => {\n        setInfoDialogOpen(true)\n    }\n    const dialogBackDropHandle = () => {\n        setInfoDialogOpen(false)\n    }\n    \n    let imagesFromURL;\n    const gotImages = imageData;\n    if(gotImages\n        //  && loaded\n         ){\n        imagesFromURL = (\n            \n            gotImages.map(\n                (image)=> (\n                    <div key={image.id}  >\n                        <ImageResult \n                        src={image.urls.small} \n                        alt={image.urls.small}\n                        clickHandler={()=>clicked(\n                            image.urls.small,\n                            image.user.name, \n                            image.user.profile_image.small,\n                            image.user.username,\n                            image.user.location,\n                            image.created_at,\n                            image.likes,\n                            image.downloads\n                            )}\n                        mouseOver={mouseOver}\n                          />\n                    </div>\n                )\n            )\n        );\n    }\n\n\n    \n    return (\n        <div>\n            <div className=\"jumbotron jumbotron-fluid \"\n            style={{backgroundImage:\"url(https://images.unsplash.com/photo-1575962003912-57a2874288c9?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max&ixid=eyJhcHBfaWQiOjI0MzIzfQ)\"}}>\n            <div className=\"container\">\n                <h1 className=\"display-2 font-weight-bold \">Unsplash</h1>\n                <p className=\"lead\">The internet’s source of freely usable images.</p>\n                <footer className=\"blockquote-footer lead\">Powered by RSA ReactJS Developer</footer>\n                <form onSubmit={handleSubmit}>\n                    <input className=\"form-control mr-sm-2\"\n                    type=\"search\"\n                    placeholder=\"Search Image\" \n                    aria-label=\"Search\" \n                    value={searchText}\n                    onChange= {handleChange} /> \n                </form>\n            </div>\n            </div>\n            \n                <div className=\"container\" >\n                    <div className={classes.cursor}>\n                        <div className={classes.col34}>\n                            \n                            {imagesFromURL} \n                        </div>\n                    </div>\n                    \n                </div>\n\n                \n                        <Dialog \n                            open={dialogOpen}\n                            onBackdropClick={handleBackDrop}\n                            maxWidth={false}\n                            fullWidth={true}\n                        >\n                             <div className=\"container\">\n                                <div className=\"row mt-2\">\n                                    <div className=\"col-3\">\n                                        <div className=\"row\">\n                                            <img src={profileImage} \n                                            className=\"img-fluid\" \n                                            alt={profileImage}\n                                            style={{borderRadius:\"50%\"}} />\n                                            \n                                                <p className=\"m-0 ml-2\"> {name}<br /> <small> @{username} </small> </p>\n                                                <p> </p>\n                                            \n                                            \n                                        </div>\n                                    </div>\n                                    <div className=\"col-3\"></div>\n                                    <div className=\"col-1\">\n                                    </div>\n                                    <div className=\"\">\n                                    </div>\n                                    <div className=\"col-5\">\n                                        <button className=\"btn btn-success float-right \"><FontAwesomeIcon icon={faArrowDown} />Download Free</button>\n                                        <button className=\"btn btn-secondary mr-2 float-right\" ><FontAwesomeIcon icon={faPlus} />Collect </button>\n                                        <button className=\"btn btn-secondary mr-2 float-right\"> <FontAwesomeIcon icon={faHeart} /> </button>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-4\">\n                                        <div className=\"row\"></div>\n                                    </div>\n                                    <div className=\"col-4\">\n                                    <img src={dialogImg} className=\"img-fluid\" alt={dialogImg}  />\n                                    </div>\n                                    <div className=\"col-4\"></div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-6\">\n                                        <FontAwesomeIcon icon={faMapPin} /> {location}\n                                    </div>\n                                    <div className=\"col-6 \">\n                                        <button className=\"btn btn-secondary float-right\" onClick={getInfo}><FontAwesomeIcon icon={faInfo} />info</button>\n                                        <button className=\"btn btn-secondary float-right\"><FontAwesomeIcon icon={faShare} />Share</button>\n                                    </div>\n                                </div>\n                             </div>\n                            \n                       \n                        \n                        <button className=\"btn btn-dark\" style={{borderRadius:\"0px\"}} onClick={handleBackDrop} >Close</button>\n\n                        </Dialog>\n                        <div className=\"container\">\n                        <Dialog\n                        open={infoDialogOpen}\n                        onBackdropClick={dialogBackDropHandle}\n                        maxWidth=\"xl\"\n                        fullWidth={true}\n                        >\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h1 className=\"display-6 font-weight-bold\">Info</h1>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-6\">\n                                        <p>Published on &nbsp;\n                                            <Moment format=\"MMM D YYYY\" >\n                                                {published}\n                                            </Moment>\n                                        </p>\n                                    </div>\n                                    <div className=\"col-6\"></div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-4\">\n                                    <p><FontAwesomeIcon icon={faThumbsUp} />\n                                        <strong>Likes</strong></p>\n                                        <h1 className=\"display-4 font-weigh-bold\"><p> {likes}</p> </h1>\n                                    </div>\n                                    <div className=\"col-4\">{downloads} </div>\n                                    <div className=\"col-4\"></div>\n                                </div>\n                            </div>\n                           \n                            \n\n                        </Dialog>\n                        </div>\n\n                        \n                        \n                \n\n\n                \n                \n           \n\n            \n        </div>\n    );\n}\n\nexport default MainCover;","import React from 'react';\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MainCover from './components/MainCover/MainCover';\n// import OnAppMountRun from './components/onAppMount/onAppMount';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Nav />\n     <MainCover  />\n      {/* <OnAppMountRun / > */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}